detector_node:
  debug: {
    type: bool,
    default_value: true,
    description: "whether to show debug info"
  }
  is_blue: {
    type: int,
    default_value: 0,
    description: "whether the armor is blue"
  }
  autoaim_mode: {
    type: int,
    default_value: 1,
    description: "whether to use armor autoaim"
  }
  image_topic: {
    type: string,
    default_value: "image_raw",
    description: "the topic name of the image to be processed"
  }
  use_traditional: {
    type: int,
    default_value: 1,
    description: "whether to use traditional method"
  }
  use_projection: {
    type: bool,
    default_value: true,
    description: "whether to use projection"
  }
  traditional:
    armor_detector:
      binary_thres: {
        type: double,
        default_value: 100,
        description: "binary threshold",
      }
      number_classifier_threshold: {
          type: double,
          default_value: 0.7,
          description: "threshold of number classifier",
      }
      light:
          min_ratio: {
            type: double,
            default_value: 0.05,
            description: "min ratio of light",
          }
          max_ratio: {
            type: double,
            default_value: 0.4,
            description: "max ratio of light",
          }
          max_angle: {
            type: double,
            default_value: 40.0,
            description: "max angle of light",
          }
      armor:
          min_light_ratio: {
            type: double,
            default_value: 0.15,
            description: "min ratio of light",
          }
          min_small_center_distance: {
            type: double,
            default_value: 0.8,
            description: "min distance of small center",
          }
          max_small_center_distance: {
            type: double,
            default_value: 3.0,
            description: "max distance of small center",
          }
          min_large_center_distance: {
            type: double,
            default_value: 3.0,
            description: "max distance of big center",
          }
          max_large_center_distance: {
            type: double,
            default_value: 9.2,
            description: "max distance of big center",
          }
          max_angle: {
            type: double,
            default_value: 35.0,
            description: "max angle of armor",
          }
    energy_detector:
      binary_thres: {
        type: double,
        default_value: 100,
        description: "binary threshold",
      }
      energy_thresh: {
        type: double,
        default_value: 100,
        description: "energy threshold",
      }
      rgb_weight_r_1: {
        type: double,
        default_value: 0.5,
        description: "rgb weight ratio",
      }
      rgb_weight_r_2: {
        type: double,
        default_value: 0.5,
        description: "rgb weight ratio",
      }
      rgb_weight_r_3: {
        type: double,
        default_value: 0.5,
        description: "rgb weight ratio",
      }
      rgb_weight_b_1: {
        type: double,
        default_value: 0.5,
        description: "rgb weight ratio",
      }
      rgb_weight_b_2: {
        type: double,
        default_value: 0.5,
        description: "rgb weight ratio",
      }
      rgb_weight_b_3: {
        type: double,
        default_value: 0.5,
        description: "rgb weight ratio",
      }
      area_ratio: {
        type: double,
        default_value: 0.5,
        description: "area ratio",
      }
  net:
    model_name: {
      type: string,
      default_value: "2x3bone-9086.onnx",
      description: "model name",
    }
    classifier_thresh: {
      type: double,
      default_value: 0.7,
      description: "threshold of classifier",
    }
    input_width: {
      type: int,
      default_value: 416,
      description: "input width of classifier",
    }
    input_height: {
      type: int,
      default_value: 416,
      description: "input height of classifier",
    }
    num_class: {
      type: int,
      default_value: 9,
      description: "number of class",
    }
    num_color: {
      type: int,
      default_value: 2,
      description: "number of color",
    }
    nms_thresh: {
      type: double,
      default_value: 0.2,
      description: "nms threshold",
    }
    num_apex: {
      type: int,
      default_value: 4,
      description: "number of apex",
    }
    pool_num: {
      type: int,
      default_value: 3,
      description: "number of pool",
    }
