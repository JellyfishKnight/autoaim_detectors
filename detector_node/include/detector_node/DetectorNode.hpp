// created by liuhan on 2023/10/29
// Submodule of HeliosRobotSystem
// for more see document: https://swjtuhelios.feishu.cn/docx/MfCsdfRxkoYk3oxWaazcfUpTnih?from=from_copylink
/*
 * ██   ██ ███████ ██      ██  ██████  ███████
 * ██   ██ ██      ██      ██ ██    ██ ██
 * ███████ █████   ██      ██ ██    ██ ███████
 * ██   ██ ██      ██      ██ ██    ██      ██
 * ██   ██ ███████ ███████ ██  ██████  ███████
 */
#pragma once

// ros
#include <rclcpp/rclcpp.hpp>
#include <cv_bridge/cv_bridge.h>

// image transport
#include <image_transport/image_transport.hpp>
#include <image_transport/publisher.hpp>
#include <image_transport/subscriber_filter.hpp>

// opencv
#include <opencv2/core.hpp>
#include <opencv2/imgcodecs.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/highgui.hpp>

// interfaces
#include <sensor_msgs/msg/image.hpp>
#include <sensor_msgs/msg/camera_info.hpp>
#include "helios_rs_interfaces/msg/armors.hpp"

// detectors
#include "net_armor_detector/NetArmorDetector.hpp"
#include "net_energy_detector/NetEnergyDetector.hpp"
#include "traditional_armor_detector/TraditionalArmorDetector.hpp"
#include "traditional_energy_detector/TraditionalEnergyDetector.hpp"

// auto generated by ros2 generate_parameter_library
// https://github.com/PickNikRobotics/generate_parameter_library
#include "detector_node_parameters.hpp"

namespace helios_cv {

using Params = detector_node::Params; 
using ParamListen = detector_node::ParamListener;

class DetectorNode : public rclcpp::Node {
public:
    DetectorNode(const rclcpp::NodeOptions& options);

    ~DetectorNode();

private:
    /**
     * @brief image message call back funtion
     * 
     * @param image_msg recieved image msg from camera node
     */
    void image_callback(sensor_msgs::msg::Image::SharedPtr image_msg);

    // topic utilities
    rclcpp::Publisher<autoaim_interfaces::msg::Armors>::SharedPtr armors_pub_;
    rclcpp::Subscription<sensor_msgs::msg::CameraInfo>::SharedPtr cam_info_sub_;
    rclcpp::Subscription<sensor_msgs::msg::Image>::SharedPtr image_sub_; 

    // detector pointers
    std::shared_ptr<NetArmorDetector> net_armor_detector_;
    std::shared_ptr<NetEnergyDetector> net_energy_detector_;
    std::shared_ptr<TraditionalArmorDetector> traditional_armor_detector_;
    std::shared_ptr<TraditionalEnergyDetector> traditional_energy_detector_;

    // param utilities
    Params params_;
    std::shared_ptr<ParamListener> param_listener_;



};

} // namespace helios_cv

